{"version":3,"sources":["webpack:///./src/pages/resume/index.tsx","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./node_modules/@material-ui/core/esm/utils/createSvgIcon.js"],"names":["useStyles","makeStyles","_","avatar","width","height","margin","data","classes","safe","childImageSharp","fluid","src","undefined","className","pageQuery","createSvgIcon","d","props","ref","alt","childrenProp","children","_props$component","component","Component","imgProps","sizes","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","path","displayName","createElement","muiName","memo","forwardRef"],"mappings":"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","file":"component---src-pages-resume-index-tsx-5ff7dc3a638d99e39c1c.js","sourcesContent":["import { Avatar, makeStyles, Theme } from '@material-ui/core';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport { GlobalLayout } from '../../components/Layout/global';\nimport { ResumePage } from '../../gatsby-queries';\nimport { safe } from '../../utils';\n\ninterface Props {\n  data: ResumePage;\n}\n\nconst useStyles = makeStyles((_: Theme) => ({\n  avatar: {\n    width: 200,\n    height: 200,\n    margin: 'auto',\n  },\n}));\n\nexport default ({ data }: Props) => {\n  const classes = useStyles();\n  const { avatar } = safe(data);\n  const { childImageSharp } = safe(avatar);\n  const { fluid } = safe(childImageSharp);\n  const { src } = safe(fluid);\n\n  // const { siteMetadata } = safe(site);\n  // const { resume } = safe(siteMetadata);\n  // return <Resume resume={safe(resume)} />;\n\n  return (\n    <GlobalLayout>\n      <Avatar src={src || undefined} className={classes.avatar} />\n    </GlobalLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ResumePage {\n    avatar: file(name: { eq: \"jeff\" }, extension: { eq: \"png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        resume {\n          basics {\n            name\n            label\n            picture\n            phone\n            website\n            summary\n            location {\n              address\n              postalCode\n              city\n              countryCode\n              region\n            }\n            profiles {\n              network\n              username\n              url\n            }\n          }\n          work {\n            company\n            position\n            website\n            startDate\n            endDate\n            summary\n            highlights\n          }\n          education {\n            institution\n            area\n            studyType\n            startDate\n            endDate\n            gpa\n            courses\n          }\n          awards {\n            title\n            date\n            awarder\n            summary\n          }\n          publications {\n            name\n            publisher\n            releaseDate\n            website\n            summary\n          }\n          skills {\n            name\n            level\n            keywords\n          }\n          languages {\n            name\n            level\n          }\n          interests {\n            name\n            keywords\n          }\n          references {\n            name\n            reference\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}"],"sourceRoot":""}