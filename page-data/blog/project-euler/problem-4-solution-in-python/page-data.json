{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/project-euler/problem-4-solution-in-python/","result":{"data":{"site":{"siteMetadata":{"author":"Jeff Willette"}},"authorAvatar":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'%20viewBox='0%200%20400%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M154%2018l-12%202c-4%202-38%203-47%201-13-3-20-1-13%202%205%202%2010%207%2010%209l1%207%201%205c-2%200-5-4-8-8l-2-4-1%203%201%205%201%203c-1%200-2-1-2-3-3-7-5%200-5%2015-1%2014%205%2024%2016%2026l6%202-5%2013c-11%2025-12%2031-15%2071v11h-3c-6%201-7%206-6%2017v17c-3%2024%201%2049%2011%2059%203%203%204%205%205%2010%206%2032%2010%2038%2037%2067%2015%2016%2017%2018%2017%2021%200%204-7%2018-10%2020-7%205-14%208-26%2010a271%20271%200%200047-1l-3-1-2-21%205%204%206%204v1c-1%200%207%206%209%206v1c-2%203-1%207%203%208%203%200%204-1%202-2l-1-2%202%201%209%201%208%201c1%202%2018%201%2018%200l-1-2-1-4-1-4-1-1c1-2%200-2-2-1-5%201-3-1%204-4l20-14%207-5%2013-12c8-7%208-7%208-4a587%20587%200%2000-4%2030c1%205-5%2012-14%2019l-3%203h43c23%200%2042%200%2041-1l-15-4-21-7-7-3c-5-2-7-3-11-9l-5-7c-1%200-1-11%201-24%201-6%202-8%205-12%2010-10%2020-30%2023-45%202-7%203-8%209-8%2019-3%2025-8%2031-28%206-16%207-25%207-43%200-19-1-24-8-28-3-2-4-2-8-1s-4%201-6-1c-3-4-7-49-5-58%202-11-2-25-10-35-4-5-5-7-3-11%203-3%202-7-2-12l-4-5c0-2-7-13-12-18s-15-11-18-11l-2-1c0-1-11-3-26-4-20-1-31-3-34-4l-27-4-15%202m-9%208l33%206c6%200%208%201%208%202l-2%202c-3%201-2%201%204%203l8%202c-1-3%203-2%2010%202l7%203-10-7-7-5c-1-2-14-5-27-5-5%200-7%200-8-2l-10-2c-6%200-8%200-6%201m-30%202l23%206c2%201%203%201%203%203-1%202%200%203%2010%204%208%200%209-1%201-3-5-1-5-3-1-3l-8-2a323%20323%200%2001-28-5M80%2047c0%206%202%2015%204%2020%203%205%203%205%202-1l-2-11%201%201c0%202%2018%2012%2023%2012%204%200%201-2-5-5-10-3-15-8-22-18-1-1-1-1-1%202m27%205c-2%201-1%202%202%204%203%201%204%202%203%203-2%204%205%207%208%204h3c3%201%203%201%203-1%200-1-9-7-18-11l-1%201m3%2043l-3%205c-4%206-5%2010-7%2021a170%20170%200%2001-5%2025l-1%202-2%2029-2%2031c-2%204-2%206-1%2012%201%207%201%2010-1%2016v3l2-3c3-2%207-4%207-2l-4%206c-6%206-6%208-3%2028%203%2024%208%2042%2016%2052a860%20860%200%200032%2033c-1-7%201-6%206%205%207%2012%2011%2016%2017%2018%209%203%209%203%2011%200%200-2%202-3%203-4%204-1%205%201%202%204-4%204-3%204%206%204%2016%200%2019-2%2032-20%209-11%2012-10%206%201-3%206-3%206%204%200l11-7c7-5%2028-28%2032-35%206-11%2014-29%2016-39%203-12%205-20%207-22l-1%2014v4l5-2%205-1-2-3c-6-8%203-12%2010-5l4%202%203-5%203-6%202-7c8-12%2010-27%204-39-3-8-4-8-6-5l-3%202%203%206c5%2012%204%2021-3%2027-10%209-11%2010-13%2010-1-1-1%200-1%202s-1%203-3%201v-8c1-8%201-8-1-14-3-7-3-10%201-17%204-8%2021-25%2026-26%204%200%204-1-1-3-4-2-4-2-9%201-7%204-22%2021-24%2028-1%207-4%209-8%205-2-2-2-3-2-15v-15c-6-11-6-10-5-23a567%20567%200%20001-34c0-13-1-16-6-21-2-3-4-4-4-3s-7%201-11-1c-10-4-30-6-63-8-40-3-53-3-55%200-1%201-1%201-2-1-1-3-3%200-3%205%200%203%206%2013%208%2013l1%201c0%203-13-1-17-5-3-4-5-10-3-13%201-3%200-5-3-5l-4-1c-2-1-2-1-4%202m4%2087l-3%202c-6%200-15%2011-10%2013l1%202h2c10-4%2012-4%2024-3%2018%201%2031%201%2032-1%202-2-1-7-7-9-4-2-6-2-14-3l-12-1h-13m107%200l-9%201c-11%200-19%202-20%204l-3%202c-3%200-4%206%200%206l3%202c3%201%2034%202%2043%200%206-1%208-1%2021%204%204%202%205%201%203-2l-1-2c2%200-3-7-9-11l-6-4h-22m-30%2019l1%202-1%201v1l1%202%202%201c1%200%201%201-1%202-6%204-6%209%200%205%203-2%205-1%203%202-2%202-3%207-2%207l3-3c4-4%209-8%2011-8s2%201%202%205v6l-5-1h-5l3%202c5%202%2033%202%2039%200l13-2c12-1%2013-2%203-4-6%200-8-1-10-3-4-3-10-5-18-7l-5-2h4c5%200%2013%203%2019%206%204%202%204%202%206%200%204-2%204-3%200-3-2%200-5%200-7-2-7-4-14-5-26-5-9%200-13-1-14-2-2-1-8-1-9%201h-1l-4-2c-2%200-3%200-2%201m-74%203l-8%204-8%203c-3%200-4%201%200%203%202%201%203%201%206-1%207-5%2013-6%2024-6l10-1c0-2-17-4-24-2m28%204c1%202%201%202-2%201h-23l-10%205c-4%202-8%204-11%204-6%202-6%203%201%203%204%200%207%200%2012%202%205%203%206%203%2021%203%2014%200%2021-1%2019-3l-4-1c-4%200-4%200-4-3%200-5%201-5%206%200%207%206%2010%205%204-2-2-3-2-4%201-1s5%200%202-4c-5-5-13-8-12-4m17%203c-3%202-4%2031-1%2035%201%201%202-1%202-17%201-20%201-19-1-18m-87%205c-3%209%201%2039%206%2043h1l1%202c1%202%201%200%201-7%200-11%200-11-3-16-4-6-6-13-5-21%201-6%200-6-1-1m69%2013c-4%202-14%203-22%202-9-2-14-2-16-1-3%201-2%202%203%202l10%202c10%203%2032-1%2032-5h-7m53%202l5%201%2011%202c8%202%2023%201%2029-1%206-3%205-3-7-2h-19c-12-2-19-2-19%200m-41%2028c-4%206-4%2013%200%2015%202%202%200%202-3%201l-5-2c-2%200-1-4%201-7%202-2%202-4%200-4s-6%205-7%208c0%203%204%208%2010%2011s9%204%209%202l4%202c6%206%2011%206%2016%202l3-2-7%201c-6%200-6%200-10-3l-6-4c-4-1-5-13-2-21%203-6%200-5-3%201m44%202l-1%201c-1-1-2%200-2%201h-1c0-2-4-1-5%201%200%203%200%203%204%202%203-1%203-1%205%201%201%203%200%206-2%206-5%200-21%206-21%208h5l5%201-3%201-1%201h7l1-4%201%201%204%202c4%200%2014-4%2011-5l-4%201h-2l1-1%204-8c0-2%201-1%206%202%2010%206%2024%2011%2030%2010%203%200%202-2%200-2l-3-1-9-3c-10-3-16-7-23-12-6-4-7-5-7-3m-61%205c-4%204-6%206-15%2011-10%206-12%209-12%2013%201%205%202%205%204%200%201-3%203-4%207-7%2011-6%2017-11%2019-18%201-3-1-2-3%201m85%2033c0%201-1%202-12%202a139%20139%200%2000-18%200c2-1%202-1%201-2-2-1-10%200-16%202h-9c-5-2-13-3-11-1%202%203%2015%204%2027%203l6-1-5%201c-7%203-18%202-29%200l-15-3-7-1c-1-1-2-1-5%201-4%203-5%205-1%204%202%200%208%204%2011%207l14%2010c15%209%2038%208%2053-3%2016-10%2020-13%2022-13%204%200%204-2-1-5s-5-3-5-1m-78%208c0%204%205%208%2010%208%202%200%202%200%201%201-2%201-2%201%202%203%207%204%2034%204%2043%200l5-4h-3c-2%201-12%202-13%201-2-1%201-2%205-2l5-2%206-1c4%200%2010-3%2010-5s-26%200-32%203h-17a358%20358%200%2000-22-2m17%2024l3%203c7%202%2030%201%2031-3h-34'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1,"src":"/static/2c4c167c05e10b4e6891182058715e8e/61fd6/jeff.png","srcSet":"/static/2c4c167c05e10b4e6891182058715e8e/69585/jeff.png 200w,\n/static/2c4c167c05e10b4e6891182058715e8e/61fd6/jeff.png 256w","sizes":"(max-width: 256px) 100vw, 256px"}}},"mdx":{"frontmatter":{"title":"Project Euler: Problem 4 Solution in Python","createdAt":"2014-10-29T02:31:36.000Z","updatedAt":"2019-01-21T16:23:35.439Z","categories":["Programming","Project Euler","Python"],"images":null},"fields":{"githubLink":"https://github.com/jeffwillette/jeffwillette.github.io.src/tree/dev/data/blog/project-euler/problem-4-solution-in-python/index.mdx"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Project Euler: Problem 4 Solution in Python\",\n  \"published\": true,\n  \"createdAt\": \"2014-10-29T02:31:36.000Z\",\n  \"updatedAt\": \"2019-01-21T16:23:35.439Z\",\n  \"categories\": [\"Programming\", \"Project Euler\", \"Python\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"The Problem States\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is\\n9009 = 91 \\xD7 99.\\n\\nFind the largest palindrome made from the product of two 3-digit numbers.\\n\")), mdx(\"h2\", null, \"My Solution\"), mdx(\"p\", null, \"First, I think I need a function that checks to see if a number is a palindrome, and then I should move on to check\\nall the products of three digit numbers to see if they are palindromes. I can then append them to a list and print\\nthe maximum.\"), mdx(\"p\", null, \"For the palindrome function, I need to turn x into a string, and then check it forwards and backwards. How do I print\\nstrings forwards and backwards in python? By using index steps \", \"[start:stop:step]\", \". If I leave the start and stop blank\\nand use a step of -1 it should print the number backwards. x\", \"[::-1]\"), mdx(\"p\", null, \"I then need to use two for loops to multiply all possible combinations of three digit numbers, and add them to a list\\nif they are palindromes.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"import time\\nstart_time = time.clock()\\n\\ndef arePalindrome(x):\\n    x = str(x)\\n    y = x[::-1]\\n    if x == y:\\n        return True\\n    else:\\n        return False\\n\\npalindromes = []\\nfor i in range(100, 1000):\\n    for j in range(100, 1000):\\n        test = i * j\\n        if arePalindrome(test) == True:\\n            palindromes.append(test)\\n\\nprint(palindromes)\\nprint(max(palindromes))\\n\\nprint()\\nprint('finished in:', time.clock() - start_time, 'seconds')\\n\")), mdx(\"h2\", null, \"The Output\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[10201, 11211, 12221, 13231, 14241, 15251, 16261, 17271, 18281, 19291, 20402, 21412, 22422, 23432, 24442, 25452, 26462, 27472, 28482, 29492, 30603, 31613, 32623, 33633, 34643, 35653, 36663, 37673, 38683, 39693, 40804, 41814, 42824, 43834, 44844, 45854, 46864, 47874, 48884, 49894, 20502, 21012, 41514, 42024, 62526, 63036, 83538, 84048, 21012, 26162, 42024, 47174, 63036, 68186, 84048, 89198, 21112, 27872, 42224, 48984, 63336, 80808, 84448, 88088, 50505, 53235, 55755, 58485, 21412, 23532, 25652, 27772, 29892, 40704, 42824, 44944, 25252, 45154, 65056, 73937, 93839, 27972, 29592, 46764, 48384, 63936, 65556, 67176, 82728, 84348, 15151, 64746, 74447, 79897, 84148, 89598, 99299, 11211, 12321, 13431, 14541, 15651, 16761, 17871, 18981, 20202, 21312, 22422, 23532, 24642, 25752, 26862, 27972, 30303, 31413, 32523, 33633, 34743, 35853, 36963, 40404, 41514, 42624, 43734, 44844, 45954, 50505, 51615, 52725, 53835, 54945, 60606, 61716, 62826, 63936, 70707, 71817, 72927, 80808, 81918, 90909, 23632, 29792, 42224, 48384, 65856, 84448, 27572, 49494, 51415, 73337, 78987, 80908, 95259, 26562, 43434, 60306, 68286, 69996, 85158, 86868, 52325, 53935, 56465, 21112, 23432, 25752, 42224, 44544, 46864, 61016, 63336, 65656, 67976, 82128, 84448, 86768, 28782, 30303, 53235, 60606, 76167, 83538, 90909, 99099, 21712, 25252, 46964, 64546, 68086, 82128, 89798, 15351, 44744, 54145, 69496, 83538, 98889, 12221, 13431, 14641, 15851, 22022, 23232, 24442, 25652, 26862, 33033, 34243, 35453, 36663, 37873, 44044, 45254, 46464, 47674, 48884, 55055, 56265, 57475, 58685, 59895, 66066, 67276, 68486, 69696, 77077, 78287, 79497, 88088, 89298, 99099, 106601, 119911, 26962, 27572, 28182, 40504, 41114, 68686, 69296, 81618, 82228, 18081, 28782, 33333, 66666, 71217, 81918, 89298, 99999, 117711, 23932, 44144, 48484, 63736, 88288, 52125, 52625, 57375, 57875, 25452, 27972, 48384, 60606, 81018, 83538, 26162, 37973, 43434, 60706, 69596, 75057, 86868, 92329, 40704, 42624, 44544, 46464, 48384, 15351, 34443, 49794, 53535, 68886, 72627, 87978, 91719, 13231, 14541, 15851, 25152, 26462, 27772, 37073, 38383, 39693, 21912, 23232, 46464, 61116, 69696, 84348, 21812, 29792, 37373, 66766, 74347, 20502, 27872, 46364, 66866, 85358, 54945, 55755, 56565, 57375, 58185, 27472, 42024, 44744, 69496, 84048, 86768, 19591, 20002, 29592, 30003, 39593, 40004, 49594, 50005, 59595, 60006, 69596, 70007, 79597, 80008, 89598, 90009, 99599, 110011, 41814, 45954, 60306, 64446, 68586, 87078, 15151, 24742, 39893, 52125, 61716, 67276, 76867, 105501, 14241, 15651, 27072, 28482, 29892, 67876, 68586, 69296, 82928, 83638, 84348, 85058, 19591, 22022, 33033, 44044, 55055, 66066, 77077, 88088, 99099, 101101, 111111, 121121, 131131, 141141, 21312, 27072, 42624, 48384, 63936, 69696, 80208, 50605, 52925, 57275, 59595, 20002, 22922, 29492, 40004, 42924, 49494, 60006, 62926, 69496, 80008, 82928, 89498, 18081, 42924, 65856, 70707, 88788, 93639, 21312, 23532, 25752, 27972, 40404, 42624, 44844, 61716, 63936, 80808, 74947, 83738, 89698, 92529, 98489, 15251, 16761, 72027, 73537, 87278, 88788, 29792, 46664, 48184, 63536, 65056, 80408, 20502, 57375, 63036, 77877, 83538, 22022, 28182, 44044, 66066, 88088, 51615, 55955, 56265, 40404, 48984, 63336, 80808, 86268, 22922, 26062, 35953, 39093, 48984, 70807, 83838, 96869, 108801, 143341, 28282, 43134, 47874, 62726, 86268, 23532, 29892, 40704, 72027, 78387, 95559, 16261, 17871, 52325, 53935, 68586, 29992, 59495, 68786, 98289, 102201, 21812, 29192, 44444, 67076, 82328, 88888, 51315, 54945, 56265, 59895, 21912, 26062, 40504, 47974, 66566, 85158, 29392, 33233, 66466, 70307, 99699, 48384, 63336, 65856, 80808, 53235, 59995, 61516, 98189, 17271, 18981, 43434, 85158, 86868, 31313, 46364, 62626, 77677, 93939, 165561, 25752, 44544, 63336, 82128, 52325, 57575, 23232, 29392, 40304, 46464, 63536, 69696, 80608, 86768, 55755, 59295, 82128, 98589, 24742, 29192, 44144, 68886, 83838, 88288, 28282, 51015, 65156, 79297, 80908, 155551, 18281, 31313, 49594, 62626, 79097, 92129, 93939, 20202, 21112, 22022, 40404, 41314, 42224, 43134, 44044, 60606, 61516, 62426, 63336, 64246, 65156, 66066, 80808, 81718, 82628, 83538, 84448, 85358, 86268, 87178, 88088, 28182, 74847, 81618, 21712, 29992, 44344, 80408, 88688, 50505, 51615, 52725, 53835, 54945, 87978, 41514, 45254, 86768, 127721, 133331, 168861, 174471, 180081, 27072, 29892, 44744, 86668, 27972, 48384, 55755, 76167, 83538, 90909, 19291, 36863, 52525, 87478, 21312, 23232, 25152, 27072, 40704, 42624, 44544, 46464, 48384, 63936, 65856, 67776, 69696, 23932, 36863, 49794, 71217, 84148, 97079, 142241, 50505, 53235, 29792, 42924, 65856, 88788, 43734, 47674, 71117, 75057, 64746, 69696, 84348, 89298, 33233, 46964, 66466, 99699, 20502, 59295, 79797, 98289, 20402, 21412, 22422, 23432, 24442, 25452, 26462, 27472, 28482, 29492, 40804, 41814, 42824, 43834, 44844, 45854, 46864, 47874, 48884, 49894, 21112, 42224, 63336, 84448, 21012, 42024, 63036, 84048, 55555, 21012, 26162, 42024, 47174, 63036, 68186, 84048, 89198, 41814, 45954, 92529, 96669, 27872, 42224, 84448, 57475, 63536, 102201, 137731, 154451, 171171, 189981, 204402, 23632, 45154, 68786, 92629, 21412, 23532, 25652, 27772, 29892, 40704, 42824, 44944, 68586, 76467, 84348, 92229, 25252, 45154, 65056, 51815, 53535, 55255, 29592, 48384, 63936, 67176, 82728, 43834, 76167, 64746, 84148, 89598, 30003, 42924, 49494, 60006, 72927, 79497, 90009, 26962, 54145, 83538, 22422, 23532, 24642, 25752, 26862, 27972, 40404, 41514, 42624, 43734, 44844, 45954, 60606, 61716, 62826, 63936, 80808, 81918, 210012, 56865, 59095, 81618, 98789, 188881, 29792, 48384, 65856, 84448, 52425, 57375, 27572, 49494, 80908, 41314, 45854, 82628, 99199, 182281, 69996, 86868, 35953, 40304, 47174, 80608, 87478, 28182, 33033, 66066, 99099, 108801, 111111, 138831, 141141, 168861, 171171, 198891, 219912, 222222, 23432, 25752, 42224, 44544, 46864, 61016, 63336, 65656, 67976, 82128, 84448, 86768, 26562, 52425, 78987, 28782, 60606, 83538, 56165, 57575, 58985, 25252, 46964, 82128, 43134, 47874, 86268, 91719, 44744, 69496, 83538, 219912, 56165, 60706, 67876, 128821, 44344, 51815, 88688, 24442, 25652, 26862, 44044, 45254, 46464, 47674, 48884, 66066, 67276, 68486, 69696, 88088, 89298, 201102, 214412, 227722, 27572, 40504, 69296, 82228, 54145, 57575, 28782, 66666, 81918, 89298, 49894, 74347, 171171, 44144, 63736, 88288, 215512, 39093, 53535, 85158, 58985, 66766, 74547, 82328, 90109, 25452, 27972, 48384, 105501, 133331, 161161, 178871, 221122, 238832, 26162, 43434, 60706, 69596, 86868, 56865, 57375, 40704, 44544, 48384, 55255, 63736, 49794, 68886, 87978, 210012, 27972, 30303, 40404, 50505, 60606, 70707, 80808, 90909, 111111, 222222, 117711, 26462, 27772, 61016, 90209, 46464, 69696, 213312, 219912, 234432, 255552, 59095, 29792, 66766, 239932, 34443, 68886, 83838, 27872, 46364, 73437, 99799, 33333, 44444, 55555, 66666, 77777, 88888, 99999, 122221, 244442, 27472, 84048, 86768, 30303, 33033, 40404, 43134, 50505, 53235, 60606, 63336, 66066, 70707, 73437, 76167, 80808, 83538, 86268, 90909, 93639, 96369, 99099, 111111, 141141, 171171, 222222, 252252, 29592, 40004, 49594, 60006, 69596, 80008, 89598, 220022, 52525, 57475, 98889, 201102, 61716, 67276, 51615, 76167, 270072, 37373, 83738, 95259, 28482, 29892, 31413, 34243, 37073, 62826, 65656, 68486, 99899, 67876, 69296, 82928, 84348, 51015, 52725, 44044, 66066, 88088, 202202, 212212, 222222, 232232, 242242, 252252, 262262, 272272, 282282, 39893, 77777, 198891, 239932, 42624, 48384, 63936, 69696, 234432, 39593, 47974, 87278, 95659, 53835, 92829, 29492, 40004, 42924, 69496, 80008, 82928, 32523, 35453, 38383, 67976, 42924, 65856, 88788, 219912, 252252, 55755, 59295, 42624, 63936, 80808, 234432, 54945, 64746, 74547, 84348, 94149, 83738, 89698, 37973, 52325, 161161, 74347, 89698, 168861, 87278, 88788, 30603, 33633, 36663, 39693, 41814, 44844, 47874, 123321, 156651, 189981, 213312, 246642, 279972, 63536, 65056, 63036, 83538, 225522, 46664, 69996, 94249, 256652, 44044, 88088, 212212, 219912, 232232, 239932, 252252, 259952, 272272, 279972, 292292, 299992, 42024, 63036, 84048, 231132, 51315, 67176, 174471, 48984, 63336, 80808, 31613, 34743, 37873, 48984, 83838, 286682, 53235, 55755, 86268, 215512, 48184, 94149, 149941, 40704, 258852, 86768, 92829, 117711, 140041, 165561, 209902, 232232, 257752, 280082, 180081, 68586, 32623, 35853, 52325, 68786, 204402, 64746, 89598, 273372, 82328, 88888, 44744, 57575, 141141, 209902, 282282, 68186, 95659, 302203, 40504, 33633, 36963, 42624, 45954, 51615, 54945, 60606, 63936, 72927, 81918, 90909, 135531, 234432, 66466, 53935, 59295, 48384, 65856, 41114, 82228, 329923, 61516, 49494, 78987, 95259, 324423, 56265, 87978, 129921, 133331, 184481, 215512, 266662, 270072, 301103, 43434, 85158, 86868, 34643, 62426, 65856, 90209, 93639, 46364, 62626, 290092, 44544, 63336, 82128, 50605, 76167, 83538, 90909, 46464, 69696, 80608, 213312, 234432, 255552, 276672, 297792, 35653, 64246, 67776, 96369, 99899, 82128, 59995, 44144, 88288, 83538, 98889, 168861, 219912, 65156, 80908, 76467, 90109, 55955, 63536, 71117, 49594, 62626, 36663, 46464, 56265, 59895, 66066, 69696, 79497, 89298, 99099, 147741, 162261, 201102, 255552, 270072, 348843, 40404, 42224, 44044, 61516, 63336, 65156, 80808, 82628, 84448, 86268, 88088, 212212, 232232, 252252, 272272, 292292, 50005, 52925, 59495, 81618, 88688, 238832, 71217, 81918, 89298, 99999, 117711, 198891, 99799, 212212, 270072, 37673, 41514, 45254, 86768, 219912, 225522, 231132, 266662, 272272, 52125, 57375, 44744, 297792, 42224, 63336, 84448, 232232, 48384, 83538, 43434, 75057, 86868, 129921, 87478, 38683, 82728, 40704, 42624, 44544, 46464, 48384, 55055, 49794, 84148, 284482, 68886, 91719, 378873, 294492, 372273, 48484, 133331, 266662, 65856, 219912, 39693, 159951, 276672, 43734, 47674, 57275, 69696, 84348, 216612, 234432, 252252, 270072, 279972, 297792, 62726, 79797, 187781, 46964, 66466, 171171, 66566, 225522, 76167, 40804, 42824, 44844, 46864, 48884, 213312, 235532, 257752, 279972, 42224, 63336, 84448, 209902, 232232, 41514, 54945, 111111, 123321, 135531, 147741, 159951, 210012, 222222, 234432, 246642, 258852, 321123, 333333, 345543, 357753, 369963, 42024, 84048, 219912, 67076, 74847, 59595, 60006, 89598, 90009, 330033, 42024, 63036, 84048, 231132, 55755, 41814, 45954, 53535, 84448, 52125, 61716, 105501, 63536, 204402, 221122, 239932, 256652, 273372, 290092, 408804, 56565, 308803, 52625, 70307, 45154, 68786, 259952, 297792, 42824, 44944, 401104, 57375, 68586, 84348, 65056, 277772, 66066, 99099, 111111, 141141, 171171, 222222, 252252, 282282, 303303, 333333, 363363, 393393, 414414, 58185, 62926, 48384, 63936, 46764, 89198, 92229, 43834, 59595, 84148, 273372, 60306, 79097, 80408, 99199, 221122, 49494, 60006, 92629, 140041, 280082, 198891, 252252, 83538, 272272, 79297, 98789, 214412, 428824, 44844, 61716, 63936, 80808, 210012, 234432, 258852, 420024, 81618, 436634, 92529, 162261, 48384, 65856, 77677, 81718, 70807, 89298, 117711, 122221, 198891, 239932, 244442, 366663, 371173, 407704, 412214, 80908, 407704, 72027, 88788, 45854, 82628, 50505, 51415, 52325, 53235, 54145, 55055, 412214, 47174, 80608, 87478, 443344, 57375, 83538, 86668, 66066, 219912, 222222, 249942, 252252, 279972, 282282, 414414, 444444, 57875, 61116, 46864, 82128, 84448, 86768, 51615, 56265, 64446, 96669, 354453, 252252, 53935, 85358, 48984, 83838, 108801, 82128, 238832, 87978, 149941, 168861, 187781, 210012, 359953, 378873, 397793, 401104, 420024, 47874, 86268, 52725, 57475, 69496, 219912, 272272, 72027, 60706, 67876, 87178, 50505, 60606, 70707, 80808, 90909, 111111, 222222, 333333, 444444, 88688, 68586, 414414, 48884, 67276, 69696, 88088, 214412, 255552, 270072, 296692, 402204, 428824, 443344, 469964, 53835, 58685, 73537, 299992, 69296, 445544, 98289, 102201, 204402, 306603, 408804, 56465, 78387, 86768, 49894, 54945, 59895, 88288, 485584, 68586, 85158, 66866, 367763, 99699, 66766, 82328, 74947, 97079, 221122, 238832, 266662, 294492, 414414, 442244, 459954, 470074, 487784, 53235, 69596, 86868, 77877, 92129, 425524, 69496, 70007, 292292, 405504, 489984, 85158, 63736, 210012, 420024, 141141, 156651, 209902, 282282, 297792, 320023, 335533, 461164, 476674, 514415, 60606, 80808, 222222, 444444, 93939, 165561, 276672, 61016, 133331, 266662, 399993, 69696, 213312, 234432, 255552, 276672, 297792, 405504, 426624, 447744, 468864, 489984, 60306, 80408, 221122, 442244, 55755, 432234, 239932, 68886, 83838, 289982, 491194, 77077, 128821, 161161, 198891, 219912, 252252, 289982, 343343, 434434, 525525, 184481, 249942, 66666, 88888, 244442, 488884, 93939, 507705, 60606, 63336, 66066, 80808, 83538, 86268, 222222, 252252, 282282, 414414, 444444, 474474, 64546, 216612, 493394, 69596, 80008, 409904, 440044, 513315, 76867, 86268, 474474, 201102, 402204, 531135, 543345, 61716, 67276, 58485, 80208, 98589, 441144, 270072, 74347, 168861, 174471, 180081, 219912, 225522, 231132, 399993, 456654, 462264, 507705, 513315, 83738, 68686, 72627, 377773, 421124, 297792, 62826, 65656, 68486, 69296, 82928, 88088, 212212, 232232, 252252, 272272, 292292, 404404, 424424, 444444, 464464, 484484, 384483, 239932, 63936, 69696, 234432, 297792, 405504, 468864, 68086, 374473, 87278, 71217, 79597, 98189, 294492, 212212, 235532, 258852, 391193, 401104, 424424, 447744, 580085, 69496, 80008, 82928, 67976, 548845, 65856, 88788, 219912, 252252, 83638, 75057, 63936, 234432, 468864, 554455, 64746, 84348, 99699, 414414, 68286, 85058, 375573, 560065, 95559, 138831, 89698, 98289, 225522, 88788, 508805, 510015, 523325, 536635, 549945, 551155, 564465, 577775, 592295, 213312, 246642, 279972, 426624, 459954, 65556, 65056, 63336, 141141, 282282, 63036, 62526, 89498, 296692, 69996, 256652, 601106, 534435, 88088, 219912, 232232, 259952, 272272, 299992, 424424, 464464, 96869, 63036, 84048, 231132, 462264, 320023, 92529, 67176, 102201, 171171, 189981, 204402, 273372, 306603, 375573, 408804, 477774, 561165, 579975, 456654, 87078, 589985, 215512, 522225, 509905, 258852, 447744, 70707, 77077, 85358, 93639, 161161, 252252, 343343, 434434, 525525, 595595, 616616, 86768, 209902, 232232, 257752, 280082, 416614, 464464, 489984, 623326, 84348, 528825, 81018, 588885, 611116, 71817, 78287, 73337, 238832, 277772, 335533, 374473, 432234, 471174, 76167, 408804, 631136, 416614, 89598, 273372, 438834, 72927, 79497, 90009, 209902, 282282, 137731, 98489, 68186, 604406, 83538, 445544, 650056, 81918, 234432, 432234, 468864, 630036, 81618, 377773, 384483, 391193, 438834, 445544, 452254, 506605, 513315, 520025, 82228, 452254, 648846, 87978, 215512, 266662, 270072, 434434, 485584, 602206, 649946, 653356, 74447, 127721, 86868, 519915, 550055, 401104, 212212, 424424, 636636, 73937, 570075, 99099, 108801, 171171, 198891, 252252, 279972, 333333, 414414, 585585, 666666, 290092, 512215, 573375, 82128, 489984, 78987, 576675, 83538, 579975, 213312, 234432, 255552, 276672, 297792, 405504, 426624, 447744, 468864, 489984, 618816, 639936, 101101, 178871, 202202, 279972, 303303, 404404, 505505, 606606, 82128, 91719, 88288, 485584, 650056, 133331, 266662, 399993, 83538, 219912, 505505, 515515, 525525, 535535, 545545, 555555, 565565, 575575, 585585, 595595, 80908, 515515, 698896, 89298, 201102, 255552, 270072, 402204, 456654, 471174, 603306, 657756, 672276, 92329, 99599, 80808, 84448, 88088, 232232, 272272, 424424, 464464, 616616, 656656, 696696, 168861, 611116, 79897, 661166, 525525, 142241, 225522, 284482, 308803, 367763, 512215, 571175, 654456, 81918, 89298, 154451, 171171, 212212, 424424, 636636, 270072, 85158, 86768, 219912, 231132, 272272, 409904, 421124, 462264, 611116, 652256, 693396, 535535, 297792, 84448, 232232, 464464, 696696, 506605, 105501, 294492, 354453, 399993, 414414, 459954, 519915, 663366, 723327, 89798, 359953, 86868, 477774, 545545, 513315, 82728, 405504, 447744, 489984, 84148, 619916, 612216, 630036, 520025, 571175, 80808, 90909, 111111, 222222, 333333, 444444, 555555, 666666, 239932, 84348, 266662, 276672, 321123, 642246, 565565, 234432, 270072, 297792, 405504, 441144, 468864, 612216, 639936, 675576, 689986, 378873, 110011, 182281, 220022, 292292, 330033, 440044, 509905, 550055, 619916, 660066, 729927, 770077, 654456, 575575, 434434, 213312, 257752, 426624, 639936, 84448, 232232, 464464, 696696, 99999, 366663, 210012, 222222, 234432, 246642, 258852, 420024, 432234, 444444, 456654, 468864, 630036, 642246, 654456, 666666, 678876, 84048, 611116, 83538, 90909, 99099, 171171, 252252, 333333, 414414, 585585, 666666, 747747, 89598, 660066, 371173, 84048, 462264, 522225, 525525, 528825, 570075, 573375, 576675, 579975, 98889, 201102, 402204, 603306, 804408, 219912, 595595, 678876, 239932, 256652, 273372, 290092, 408804, 425524, 442244, 611116, 698896, 397793, 508805, 95259, 510015, 259952, 807708, 585585, 297792, 88088, 99099, 121121, 188881, 242242, 363363, 484484, 616616, 737737, 780087, 401104, 447744, 802208, 345543, 675576, 222222, 252252, 282282, 414414, 444444, 474474, 606606, 636636, 666666, 696696, 828828, 198891, 749947, 523325, 89198, 801108, 821128, 155551, 215512, 474474, 534435, 689986, 749947, 793397, 809908, 853358, 737737, 652256, 221122, 442244, 663366, 93839, 280082, 357753, 618816, 106601, 252252, 301103, 602206, 272272, 214412, 428824, 536635, 234432, 420024, 468864, 654456, 840048, 461164, 855558, 561165, 414414, 828828, 239932, 244442, 407704, 412214, 488884, 493394, 656656, 661166, 819918, 824428, 168861, 407704, 507705, 657756, 189981, 279972, 369963, 459954, 549945, 639936, 729927, 819918, 99299, 551155, 143341, 286682, 302203, 445544, 491194, 588885, 604406, 650056, 747747, 793397, 906609, 412214, 824428, 513315, 443344, 886688, 131131, 262262, 393393, 780087, 476674, 219912, 252252, 279972, 444444, 636636, 696696, 801108, 828828, 861168, 888888, 579975, 672276, 693396, 489984, 470074, 809908, 861168, 174471, 564465, 507705, 513315, 548845, 554455, 560065, 589985, 595595, 227722, 238832, 210012, 401104, 420024, 611116, 630036, 802208, 821128, 840048, 292292, 219912, 272272, 649946, 723327, 577775, 117711, 165561, 324423, 372273, 489984, 531135, 648846, 696696, 807708, 855558, 653356, 770077, 348843, 222222, 444444, 666666, 888888, 180081, 487784, 414414, 828828, 255552, 270072, 428824, 443344, 616616, 631136, 698896, 804408, 886688, 469964, 299992, 525525, 623326, 204402, 408804, 329923, 378873, 436634, 485584, 543345, 592295, 601106, 650056, 853358, 141141, 282282, 119911, 906609, 514415, 580085]\\nthe maximum palindrom is: 906609\\n\\nfinished in: 2.147632658611745 seconds\\n\")), mdx(\"p\", null, \"There is probably a faster way to solve this problem, but two seconds isn't too bad\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"tableOfContents":{"items":[{"url":"#the-problem-states","title":"The Problem States"},{"url":"#my-solution","title":"My Solution"},{"url":"#the-output","title":"The Output"}]},"excerpt":"The Problem States My Solution First, I think I need a function that checks to see if a number is a palindrome, and then I should move on to…"}},"pageContext":{"id":"6a429339-f702-59cc-b3a0-ea0dc9fce1bd"}}}